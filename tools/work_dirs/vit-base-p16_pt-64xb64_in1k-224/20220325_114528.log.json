{"env_info": "sys.platform: win32\nPython: 3.6.7 |Anaconda, Inc.| (default, Oct 28 2018, 19:44:12) [MSC v.1915 64 bit (AMD64)]\nCUDA available: True\nGPU 0: GeForce GTX 1080\nCUDA_HOME: C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.2\nNVCC: Not Available\nGCC: n/a\nPyTorch: 1.6.0+cu101\nPyTorch compiling details: PyTorch built with:\n  - C++ Version: 199711\n  - MSVC 192628806\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191125 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.5.0 (Git Hash e2ac1fac44c5078ca927cb9b90e1b3066a0b2ed0)\n  - OpenMP 2019\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.4\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj -openmp:experimental -DNDEBUG -DUSE_FBGEMM -DUSE_VULKAN_WRAPPER, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, \n\nTorchVision: 0.7\nOpenCV: 4.5.1\nMMCV: 1.4.3\nMMCV Compiler: MSVC 192930137\nMMCV CUDA Compiler: 10.2\nMMClassification: 0.21.0+", "seed": 1604756312, "mmcls_version": "0.21.0", "config": "model = dict(\n    type='ImageClassifier',\n    backbone=dict(\n        type='VisionTransformer',\n        arch='b',\n        img_size=224,\n        patch_size=16,\n        drop_rate=0.1,\n        init_cfg=[\n            dict(\n                type='Kaiming',\n                layer='Conv2d',\n                mode='fan_in',\n                nonlinearity='linear')\n        ]),\n    neck=None,\n    head=dict(\n        type='VisionTransformerClsHead',\n        num_classes=102,\n        in_channels=768,\n        loss=dict(\n            type='LabelSmoothLoss', label_smooth_val=0.1,\n            mode='classy_vision'),\n        hidden_dim=3072),\n    train_cfg=dict(\n        augments=dict(type='BatchMixup', alpha=0.2, num_classes=102,\n                      prob=1.0)))\ndataset_type = 'ImageNet'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='RandomResizedCrop',\n        size=224,\n        backend='pillow',\n        interpolation='bicubic'),\n    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n    dict(\n        type='AutoAugment',\n        policies=[[{\n            'type': 'Posterize',\n            'bits': 4,\n            'prob': 0.4\n        }, {\n            'type': 'Rotate',\n            'angle': 30.0,\n            'prob': 0.6\n        }],\n                  [{\n                      'type': 'Solarize',\n                      'thr': 113.77777777777777,\n                      'prob': 0.6\n                  }, {\n                      'type': 'AutoContrast',\n                      'prob': 0.6\n                  }],\n                  [{\n                      'type': 'Equalize',\n                      'prob': 0.8\n                  }, {\n                      'type': 'Equalize',\n                      'prob': 0.6\n                  }],\n                  [{\n                      'type': 'Posterize',\n                      'bits': 5,\n                      'prob': 0.6\n                  }, {\n                      'type': 'Posterize',\n                      'bits': 5,\n                      'prob': 0.6\n                  }],\n                  [{\n                      'type': 'Equalize',\n                      'prob': 0.4\n                  }, {\n                      'type': 'Solarize',\n                      'thr': 142.22222222222223,\n                      'prob': 0.2\n                  }],\n                  [{\n                      'type': 'Equalize',\n                      'prob': 0.4\n                  }, {\n                      'type': 'Rotate',\n                      'angle': 26.666666666666668,\n                      'prob': 0.8\n                  }],\n                  [{\n                      'type': 'Solarize',\n                      'thr': 170.66666666666666,\n                      'prob': 0.6\n                  }, {\n                      'type': 'Equalize',\n                      'prob': 0.6\n                  }],\n                  [{\n                      'type': 'Posterize',\n                      'bits': 6,\n                      'prob': 0.8\n                  }, {\n                      'type': 'Equalize',\n                      'prob': 1.0\n                  }],\n                  [{\n                      'type': 'Rotate',\n                      'angle': 10.0,\n                      'prob': 0.2\n                  }, {\n                      'type': 'Solarize',\n                      'thr': 28.444444444444443,\n                      'prob': 0.6\n                  }],\n                  [{\n                      'type': 'Equalize',\n                      'prob': 0.6\n                  }, {\n                      'type': 'Posterize',\n                      'bits': 5,\n                      'prob': 0.4\n                  }],\n                  [{\n                      'type': 'Rotate',\n                      'angle': 26.666666666666668,\n                      'prob': 0.8\n                  }, {\n                      'type': 'ColorTransform',\n                      'magnitude': 0.0,\n                      'prob': 0.4\n                  }],\n                  [{\n                      'type': 'Rotate',\n                      'angle': 30.0,\n                      'prob': 0.4\n                  }, {\n                      'type': 'Equalize',\n                      'prob': 0.6\n                  }],\n                  [{\n                      'type': 'Equalize',\n                      'prob': 0.0\n                  }, {\n                      'type': 'Equalize',\n                      'prob': 0.8\n                  }],\n                  [{\n                      'type': 'Invert',\n                      'prob': 0.6\n                  }, {\n                      'type': 'Equalize',\n                      'prob': 1.0\n                  }],\n                  [{\n                      'type': 'ColorTransform',\n                      'magnitude': 0.4,\n                      'prob': 0.6\n                  }, {\n                      'type': 'Contrast',\n                      'magnitude': 0.8,\n                      'prob': 1.0\n                  }],\n                  [{\n                      'type': 'Rotate',\n                      'angle': 26.666666666666668,\n                      'prob': 0.8\n                  }, {\n                      'type': 'ColorTransform',\n                      'magnitude': 0.2,\n                      'prob': 1.0\n                  }],\n                  [{\n                      'type': 'ColorTransform',\n                      'magnitude': 0.8,\n                      'prob': 0.8\n                  }, {\n                      'type': 'Solarize',\n                      'thr': 56.888888888888886,\n                      'prob': 0.8\n                  }],\n                  [{\n                      'type': 'Sharpness',\n                      'magnitude': 0.7,\n                      'prob': 0.4\n                  }, {\n                      'type': 'Invert',\n                      'prob': 0.6\n                  }],\n                  [{\n                      'type': 'Shear',\n                      'magnitude': 0.16666666666666666,\n                      'prob': 0.6,\n                      'direction': 'horizontal'\n                  }, {\n                      'type': 'Equalize',\n                      'prob': 1.0\n                  }],\n                  [{\n                      'type': 'ColorTransform',\n                      'magnitude': 0.0,\n                      'prob': 0.4\n                  }, {\n                      'type': 'Equalize',\n                      'prob': 0.6\n                  }],\n                  [{\n                      'type': 'Equalize',\n                      'prob': 0.4\n                  }, {\n                      'type': 'Solarize',\n                      'thr': 142.22222222222223,\n                      'prob': 0.2\n                  }],\n                  [{\n                      'type': 'Solarize',\n                      'thr': 113.77777777777777,\n                      'prob': 0.6\n                  }, {\n                      'type': 'AutoContrast',\n                      'prob': 0.6\n                  }],\n                  [{\n                      'type': 'Invert',\n                      'prob': 0.6\n                  }, {\n                      'type': 'Equalize',\n                      'prob': 1.0\n                  }],\n                  [{\n                      'type': 'ColorTransform',\n                      'magnitude': 0.4,\n                      'prob': 0.6\n                  }, {\n                      'type': 'Contrast',\n                      'magnitude': 0.8,\n                      'prob': 1.0\n                  }],\n                  [{\n                      'type': 'Equalize',\n                      'prob': 0.8\n                  }, {\n                      'type': 'Equalize',\n                      'prob': 0.6\n                  }]]),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='ToTensor', keys=['gt_label']),\n    dict(type='Collect', keys=['img', 'gt_label'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='Resize',\n        size=(256, -1),\n        backend='pillow',\n        interpolation='bicubic'),\n    dict(type='CenterCrop', crop_size=224),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='Collect', keys=['img'])\n]\ndata = dict(\n    samples_per_gpu=16,\n    workers_per_gpu=2,\n    train=dict(\n        type='MyFilelist',\n        data_prefix=\n        'D:\\eclipse-workspace\\PyTorch4\\mmclassification-master\\mmcls\\data\\flower_data\\train_filelist',\n        ann_file=\n        'D:\\eclipse-workspace\\PyTorch4\\mmclassification-master\\mmcls\\data\\flower_data\\train.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='RandomResizedCrop',\n                size=224,\n                backend='pillow',\n                interpolation='bicubic'),\n            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n            dict(\n                type='AutoAugment',\n                policies=[[{\n                    'type': 'Posterize',\n                    'bits': 4,\n                    'prob': 0.4\n                }, {\n                    'type': 'Rotate',\n                    'angle': 30.0,\n                    'prob': 0.6\n                }],\n                          [{\n                              'type': 'Solarize',\n                              'thr': 113.77777777777777,\n                              'prob': 0.6\n                          }, {\n                              'type': 'AutoContrast',\n                              'prob': 0.6\n                          }],\n                          [{\n                              'type': 'Equalize',\n                              'prob': 0.8\n                          }, {\n                              'type': 'Equalize',\n                              'prob': 0.6\n                          }],\n                          [{\n                              'type': 'Posterize',\n                              'bits': 5,\n                              'prob': 0.6\n                          }, {\n                              'type': 'Posterize',\n                              'bits': 5,\n                              'prob': 0.6\n                          }],\n                          [{\n                              'type': 'Equalize',\n                              'prob': 0.4\n                          }, {\n                              'type': 'Solarize',\n                              'thr': 142.22222222222223,\n                              'prob': 0.2\n                          }],\n                          [{\n                              'type': 'Equalize',\n                              'prob': 0.4\n                          }, {\n                              'type': 'Rotate',\n                              'angle': 26.666666666666668,\n                              'prob': 0.8\n                          }],\n                          [{\n                              'type': 'Solarize',\n                              'thr': 170.66666666666666,\n                              'prob': 0.6\n                          }, {\n                              'type': 'Equalize',\n                              'prob': 0.6\n                          }],\n                          [{\n                              'type': 'Posterize',\n                              'bits': 6,\n                              'prob': 0.8\n                          }, {\n                              'type': 'Equalize',\n                              'prob': 1.0\n                          }],\n                          [{\n                              'type': 'Rotate',\n                              'angle': 10.0,\n                              'prob': 0.2\n                          }, {\n                              'type': 'Solarize',\n                              'thr': 28.444444444444443,\n                              'prob': 0.6\n                          }],\n                          [{\n                              'type': 'Equalize',\n                              'prob': 0.6\n                          }, {\n                              'type': 'Posterize',\n                              'bits': 5,\n                              'prob': 0.4\n                          }],\n                          [{\n                              'type': 'Rotate',\n                              'angle': 26.666666666666668,\n                              'prob': 0.8\n                          }, {\n                              'type': 'ColorTransform',\n                              'magnitude': 0.0,\n                              'prob': 0.4\n                          }],\n                          [{\n                              'type': 'Rotate',\n                              'angle': 30.0,\n                              'prob': 0.4\n                          }, {\n                              'type': 'Equalize',\n                              'prob': 0.6\n                          }],\n                          [{\n                              'type': 'Equalize',\n                              'prob': 0.0\n                          }, {\n                              'type': 'Equalize',\n                              'prob': 0.8\n                          }],\n                          [{\n                              'type': 'Invert',\n                              'prob': 0.6\n                          }, {\n                              'type': 'Equalize',\n                              'prob': 1.0\n                          }],\n                          [{\n                              'type': 'ColorTransform',\n                              'magnitude': 0.4,\n                              'prob': 0.6\n                          }, {\n                              'type': 'Contrast',\n                              'magnitude': 0.8,\n                              'prob': 1.0\n                          }],\n                          [{\n                              'type': 'Rotate',\n                              'angle': 26.666666666666668,\n                              'prob': 0.8\n                          }, {\n                              'type': 'ColorTransform',\n                              'magnitude': 0.2,\n                              'prob': 1.0\n                          }],\n                          [{\n                              'type': 'ColorTransform',\n                              'magnitude': 0.8,\n                              'prob': 0.8\n                          }, {\n                              'type': 'Solarize',\n                              'thr': 56.888888888888886,\n                              'prob': 0.8\n                          }],\n                          [{\n                              'type': 'Sharpness',\n                              'magnitude': 0.7,\n                              'prob': 0.4\n                          }, {\n                              'type': 'Invert',\n                              'prob': 0.6\n                          }],\n                          [{\n                              'type': 'Shear',\n                              'magnitude': 0.16666666666666666,\n                              'prob': 0.6,\n                              'direction': 'horizontal'\n                          }, {\n                              'type': 'Equalize',\n                              'prob': 1.0\n                          }],\n                          [{\n                              'type': 'ColorTransform',\n                              'magnitude': 0.0,\n                              'prob': 0.4\n                          }, {\n                              'type': 'Equalize',\n                              'prob': 0.6\n                          }],\n                          [{\n                              'type': 'Equalize',\n                              'prob': 0.4\n                          }, {\n                              'type': 'Solarize',\n                              'thr': 142.22222222222223,\n                              'prob': 0.2\n                          }],\n                          [{\n                              'type': 'Solarize',\n                              'thr': 113.77777777777777,\n                              'prob': 0.6\n                          }, {\n                              'type': 'AutoContrast',\n                              'prob': 0.6\n                          }],\n                          [{\n                              'type': 'Invert',\n                              'prob': 0.6\n                          }, {\n                              'type': 'Equalize',\n                              'prob': 1.0\n                          }],\n                          [{\n                              'type': 'ColorTransform',\n                              'magnitude': 0.4,\n                              'prob': 0.6\n                          }, {\n                              'type': 'Contrast',\n                              'magnitude': 0.8,\n                              'prob': 1.0\n                          }],\n                          [{\n                              'type': 'Equalize',\n                              'prob': 0.8\n                          }, {\n                              'type': 'Equalize',\n                              'prob': 0.6\n                          }]]),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='ToTensor', keys=['gt_label']),\n            dict(type='Collect', keys=['img', 'gt_label'])\n        ]),\n    val=dict(\n        type='ImageNet',\n        data_prefix='../mmcls/data/flower_data/val_filelist',\n        ann_file='../mmcls/data/flower_data/val.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='Resize',\n                size=(256, -1),\n                backend='pillow',\n                interpolation='bicubic'),\n            dict(type='CenterCrop', crop_size=224),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]),\n    test=dict(\n        type='ImageNet',\n        data_prefix='../mmcls/data/flower_data/val_filelist',\n        ann_file='../mmcls/data/flower_data/val.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='Resize',\n                size=(256, -1),\n                backend='pillow',\n                interpolation='bicubic'),\n            dict(type='CenterCrop', crop_size=224),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]))\nevaluation = dict(interval=1, metric='accuracy')\nparamwise_cfg = dict(\n    custom_keys=dict({\n        '.cls_token': dict(decay_mult=0.0),\n        '.pos_embed': dict(decay_mult=0.0)\n    }))\noptimizer = dict(\n    type='AdamW',\n    lr=0.003,\n    weight_decay=0.3,\n    paramwise_cfg=dict(\n        custom_keys=dict({\n            '.cls_token': dict(decay_mult=0.0),\n            '.pos_embed': dict(decay_mult=0.0)\n        })))\noptimizer_config = dict(grad_clip=dict(max_norm=1.0))\nlr_config = dict(\n    policy='CosineAnnealing',\n    min_lr=0,\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.0001)\nrunner = dict(type='EpochBasedRunner', max_epochs=100)\ncheckpoint_config = dict(interval=50)\nlog_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/vit-base-p16_pt-64xb64_in1k-224'\ngpu_ids = [0]\nseed = 1604756312\n", "CLASSES": ["\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002", "\u6211\u61d2\u5f97\u5199\u540d\u5b57\u4e86\uff0c\u6709102\u4e2a\u3002\u3002\u3002"]}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00059, "memory": 4057, "data_time": 0.1101, "loss": 4.68548, "grad_norm": 9.05239, "time": 0.53464}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00119, "memory": 4057, "data_time": 0.0004, "loss": 5.15, "grad_norm": 12.25338, "time": 0.41879}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00179, "memory": 4057, "data_time": 0.00041, "loss": 6.08446, "grad_norm": 17.60905, "time": 0.41785}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00239, "memory": 4057, "data_time": 0.00042, "loss": 7.19249, "grad_norm": 26.7817, "time": 0.41719}
{"mode": "val", "epoch": 1, "iter": 52, "lr": 0.00245, "accuracy_top-1": 2.56724, "accuracy_top-5": 6.72372}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.003, "memory": 4057, "data_time": 0.12863, "loss": 8.85422, "grad_norm": 34.65381, "time": 0.54155}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.003, "memory": 4057, "data_time": 0.00046, "loss": 10.93282, "grad_norm": 24.15359, "time": 0.41431}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.003, "memory": 4057, "data_time": 0.00036, "loss": 10.04257, "grad_norm": 23.37542, "time": 0.41578}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.003, "memory": 4057, "data_time": 0.00046, "loss": 10.3691, "grad_norm": 25.02755, "time": 0.41266}
{"mode": "val", "epoch": 2, "iter": 52, "lr": 0.003, "accuracy_top-1": 0.61125, "accuracy_top-5": 6.96821}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.003, "memory": 4057, "data_time": 0.12358, "loss": 9.47185, "grad_norm": 23.01356, "time": 0.53588}
